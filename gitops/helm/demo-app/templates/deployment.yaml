{{- if not .Values.rollout.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo-app
  labels:
    app: demo-app
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app: demo-app
  template:
    metadata:
      labels:
        app: demo-app
    spec:
      nodeSelector:
        workload: "true"
      containers:
        - name: app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          ports:
            - name: http
              containerPort: 8000
          # ── Probes
          startupProbe:
            httpGet: { path: /healthz, port: 8000 }
            failureThreshold: 30
            periodSeconds: 1
          readinessProbe:
            httpGet: { path: /readyz, port: 8000 }
            initialDelaySeconds: 5
            periodSeconds: 5
          livenessProbe:
            httpGet: { path: /healthz, port: 8000 }
            initialDelaySeconds: 10
            periodSeconds: 10
          # ── Env (Config from values; Secret from app-secret)
          env:
            - name: READINESS_DELAY_SEC
              value: "{{ .Values.env.READINESS_DELAY_SEC }}"
            - name: FAIL_RATE
              value: "{{ .Values.env.FAIL_RATE }}"
            - name: GREETING
              valueFrom:
                secretKeyRef:
                  name: app-secret
                  key: GREETING
          # ── Resources
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu | quote }}
              memory: {{ .Values.resources.requests.memory | quote }}
            limits:
              cpu: {{ .Values.resources.limits.cpu | quote }}
              memory: {{ .Values.resources.limits.memory | quote }}
          # ── Security (least privilege)
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            runAsGroup: 10001
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities: { drop: ["ALL"] }
{{- end }}
